{"version":3,"sources":["api/useRooms.js","util/makeURI.js","components/Room.js","routes/Home.js","routes/Test.js","App.js","index.js"],"names":["useRooms","useState","rooms","setRooms","loading","setLoading","error","setError","fetchRooms","a","axios","get","response","data","useEffect","then","makeJoinURI","room","pass","pid","mode","i","t","urienc","str","encodeURIComponent","replace","c","charCodeAt","toString","uri","tbl","len","length","mod","charAt","Room","joinURI","room_name","joinTestURI","console","log","style","borderColor","borderStyle","borderWidth","need_passwd","room_desc","members","map","member","index","href","Home","onClick","Test","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.381881ab.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ROOM_API = \"https://webapi.syncroom.appservice.yamaha.com/ndroom/room_list.json?pagesize=500&realm=4\";\r\n\r\nfunction useRooms() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    // const [autoReload, setAutoReload] = useState(true);\r\n\r\n    const fetchRooms = async () => {\r\n        /** @param response.data.rooms */\r\n        try {\r\n            setError(null);\r\n            setRooms([]);\r\n            setLoading(true);\r\n            const response = await axios.get(ROOM_API);\r\n\r\n            setRooms(response.data.rooms);\r\n        } catch (error) {\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRooms().then();\r\n    }, []);\r\n\r\n    return {rooms, loading, error, fetchRooms};\r\n}\r\n\r\nexport default useRooms;\r\n","/* ----------------------------------------------------------------------\r\n * util.js\r\n *\r\n * Copyright(C) 2014 Yamaha Corporation\r\n * All rights reserved.\r\n *\r\n * Modified by SnowSuno - syncroomkr.github.io\r\n * ---------------------------------------------------------------------- */\r\n\r\nfunction makeJoinURI(room, pass, pid, mode) {\r\n    const urienc = function(str) {\r\n        return encodeURIComponent(str)\r\n            .replace(/[!*'()]/g,\r\n                function(c) {\r\n                    return \"%\" + c.charCodeAt(0).toString(16);\r\n                });\r\n    };\r\n\r\n    const str = `joingroup?mode=${urienc(mode)}&pid=${urienc(pid)}&nickname=&groupname=${urienc(room)}&password=${urienc(pass)}`;\r\n    let uri = 'syncroom:';\r\n    const tbl = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    let len = str.length;\r\n    const mod = len % 3;\r\n    if (mod > 0)\r\n        len -= mod;\r\n\r\n    let i, t;\r\n    for (i = 0; i < len; i += 3) {\r\n        t = (str.charCodeAt(i) << 16) |\r\n            (str.charCodeAt(i + 1) <<  8) |\r\n            str.charCodeAt(i + 2);\r\n        uri += tbl.charAt((t >> 18) & 0x3F);\r\n        uri += tbl.charAt((t >> 12) & 0x3F);\r\n        uri += tbl.charAt((t >>  6) & 0x3F);\r\n        uri += tbl.charAt((t      ) & 0x3F);\r\n    }\r\n    if (mod === 2) {\r\n        t = (str.charCodeAt(i) << 16) |\r\n            (str.charCodeAt(i + 1) << 8);\r\n        uri += tbl.charAt((t >> 18) & 0x3F);\r\n        uri += tbl.charAt((t >> 12) & 0x3F);\r\n        uri += tbl.charAt((t >>  6) & 0x3F);\r\n        uri += '=';\r\n    } else if (mod === 1) {\r\n        t = str.charCodeAt(i) << 16;\r\n        uri += tbl.charAt((t >> 18) & 0x3F);\r\n        uri += tbl.charAt((t >> 12) & 0x3F);\r\n        uri += '=';\r\n        uri += '=';\r\n    }\r\n\r\n    return uri;\r\n}\r\n\r\nexport default makeJoinURI;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport makeJoinURI from \"../util/makeURI\"\r\n\r\nfunction Room(room) {\r\n    const joinURI = makeJoinURI(room.room_name, \"\", 4, 2);\r\n    const joinTestURI = makeJoinURI(room.room_name, \"\", 4, 3);\r\n\r\n    if (room.room_name === '1324') {\r\n        console.log(room);\r\n        console.log(joinURI);\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{borderColor: 'red', borderStyle: 'solid', borderWidth: '1px'}}>\r\n            <h1>{room.room_name}</h1>\r\n            <h5>{room.need_passwd ? 'Private' : 'public'}</h5>\r\n            <h4>{room.room_desc}</h4>\r\n            <ul>\r\n                {room.members.map((member, index) => (\r\n                    <li key={index}>{member}</li>  // TODO : 비공개 유저는 members array에 포함되지 않기 때문에 num_members를 이용해 추가해줘야 함\r\n                ))}\r\n            </ul>\r\n            <a href={joinTestURI}>임시 입장</a>\r\n            <br/>\r\n            <a href={joinURI}>입장</a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nRoom.propTypes = {\r\n    create_time: PropTypes.string.isRequired,\r\n    creator_icon: PropTypes.shape({\r\n        icon: PropTypes.string,\r\n        iconurl: PropTypes.string\r\n    }),\r\n    creator_mid: PropTypes.string.isRequired,\r\n    creator_nick: PropTypes.string.isRequired,\r\n    iconlist: PropTypes.arrayOf(PropTypes.shape({\r\n        icon: PropTypes.string,\r\n        iconurl: PropTypes.string\r\n    })),\r\n    index: PropTypes.number.isRequired,\r\n    members: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    need_passwd: PropTypes.bool.isRequired,\r\n    num_members: PropTypes.number.isRequired,\r\n    room_desc: PropTypes.string,\r\n    room_name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Room;\r\n","import React from \"react\";\r\n\r\nimport useRooms from \"../api/useRooms\";\r\nimport Room from \"../components/Room\";\r\n\r\nfunction Home() {\r\n    const { rooms, loading, error, fetchRooms } = useRooms();\r\n\r\n    if (!loading) {\r\n        if (!error) {\r\n            console.log(rooms)\r\n        } else {\r\n            // console.error(error);\r\n        }\r\n    }\r\n\r\n    // const { rooms } = data;\r\n    // console.log(rooms)\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={fetchRooms}>reload</button>\r\n            <div>\r\n                {rooms.map((room, index) => <Room key={index} {...room}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Test() {\r\n    return <h1>This is a Routing Test page</h1>\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Home from \"./routes/Home\";\r\nimport Test from \"./routes/Test\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Route exact path=\"/test\" component={Test}/>\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}