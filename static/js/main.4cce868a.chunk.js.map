{"version":3,"sources":["api/useRooms.js","components/Room.js","App.js","index.js"],"names":["useRooms","useState","rooms","setRooms","loading","setLoading","error","setError","fetchRooms","a","axios","get","response","data","useEffect","then","Room","room","style","borderColor","borderStyle","borderWidth","room_name","room_desc","members","map","member","index","App","console","log","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAoCeA,MA/Bf,WAAqB,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,oBAAS,GAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGUJ,mBAAS,MAHnB,mBAGTK,EAHS,KAGFC,EAHE,KAMVC,EAAU,uCAAG,4BAAAC,EAAA,sEAKXF,EAAS,MACTJ,EAAS,IACTE,GAAW,GAPA,SAQYK,IAAMC,IAhBxB,4FAQM,OAQLC,EARK,OAUXT,EAASS,EAASC,KAAKX,OAVZ,kDAYXK,EAAS,EAAD,IAZG,yBAcXF,GAAW,GAdA,6EAAH,qDAsBhB,OAJAS,qBAAU,WACNN,IAAaO,SACd,IAEI,CAACb,QAAOE,UAASE,QAAOE,e,OCSpBQ,MAtCf,SAAcC,GAGV,OACI,sBAAKC,MAAO,CAACC,YAAa,MAAOC,YAAa,QAASC,YAAa,OAApE,UACI,6BAAKJ,EAAKK,YACV,6BAAKL,EAAKM,YACV,6BACKN,EAAKO,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACd,6BAAiBD,GAARC,YCkBdC,MAzBf,WAAgB,IAAD,EACmC5B,IAAtCE,EADG,EACHA,MAAOE,EADJ,EACIA,QAASE,EADb,EACaA,MAAOE,EADpB,EACoBA,WAa/B,OAXKJ,GACIE,GACDuB,QAAQC,IAAI5B,GAUhB,gCACI,wBAAQ6B,QAASvB,EAAjB,oBACA,8BACKN,EAAMuB,KAAI,SAACR,EAAMU,GAAP,OAAiB,cAAC,EAAD,eAAsBV,GAAXU,YClBvDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4cce868a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ROOM_API = \"https://webapi.syncroom.appservice.yamaha.com/ndroom/room_list.json?pagesize=500&realm=4\";\r\n\r\nfunction useRooms() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    // const [autoReload, setAutoReload] = useState(true);\r\n\r\n    const fetchRooms = async () => {\r\n        /**\r\n         * @param response.data.rooms\r\n         */\r\n        try {\r\n            setError(null);\r\n            setRooms([]);\r\n            setLoading(true);\r\n            const response = await axios.get(ROOM_API);\r\n\r\n            setRooms(response.data.rooms);\r\n        } catch (error) {\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRooms().then();\r\n    }, []);\r\n\r\n    return {rooms, loading, error, fetchRooms};\r\n}\r\n\r\nexport default useRooms;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Room(room) {\r\n\r\n\r\n    return (\r\n        <div style={{borderColor: 'red', borderStyle: 'solid', borderWidth: '1px'}}>\r\n            <h1>{room.room_name}</h1>\r\n            <h3>{room.room_desc}</h3>\r\n            <ul>\r\n                {room.members.map((member, index) => (\r\n                    <li key={index}>{member}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nRoom.propTypes = {\r\n    create_time: PropTypes.string.isRequired,\r\n    creator_icon: PropTypes.shape({\r\n        icon: PropTypes.string.isRequired,\r\n        iconurl: PropTypes.string.isRequired\r\n    }),\r\n    creator_mid: PropTypes.string.isRequired,\r\n    creator_nick: PropTypes.string.isRequired,\r\n    iconlist: PropTypes.arrayOf(PropTypes.shape({\r\n        icon: PropTypes.string.isRequired,\r\n        iconurl: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    members: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    need_passwd: PropTypes.bool.isRequired,\r\n    num_members: PropTypes.number.isRequired,\r\n    room_desc: PropTypes.string,\r\n    room_name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Room;\r\n","import React from \"react\";\nimport './App.css';\n\nimport useRooms from \"./api/useRooms\";\nimport Room from \"./components/Room\";\n\nfunction App() {\n    const { rooms, loading, error, fetchRooms } = useRooms();\n\n    if (!loading) {\n        if (!error) {\n            console.log(rooms)\n        } else {\n            // console.error(error);\n        }\n    }\n\n    // const { rooms } = data;\n    // console.log(rooms)\n\n    return (\n        <div>\n            <button onClick={fetchRooms}>reload</button>\n            <div>\n                {rooms.map((room, index) => <Room key={index} {...room}/>)}\n            </div>\n        </div>\n    )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}