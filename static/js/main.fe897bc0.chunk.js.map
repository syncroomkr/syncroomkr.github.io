{"version":3,"sources":["hooks/useRoomData.js","components/Room/Header/index.js","components/Room/Members/index.js","components/Room/Buttons/index.js","util/joinURI.js","components/Room/index.js","components/modals/useModal.js","components/modals/Modal.js","routes/Home.js","util/shareURI.js","routes/Join.js","routes/Test.js","routes/NotFound.js","App.js","index.js"],"names":["useRoomData","useState","roomData","setRoomData","loading","setLoading","error","setError","fetchRooms","a","axios","get","response","data","rooms","useEffect","then","RoomHeader","room_name","country","need_passwd","num_members","color","className","style","background","RoomMembers","members","numPrivateMember","length","memberList","concat","Array","fill","map","member_name","index","Buttons","tempJoin","join","onClick","window","location","href","joinURI","create","room","pass","pid","mode","i","t","urienc","str","encodeURIComponent","replace","c","charCodeAt","toString","uri","tbl","len","mod","charAt","Room","room_desc","creator_nick","korean","japanese","forEach","string","test","checkCountry","useModal","open","setOpen","Modal","closeModal","children","header","Home","openModal","height","require","base62_encode","base62_decode","shareURI","roomInfo","JSON","stringify","slice","parse","encodedQuery","Join","search","history","decode","makeJoinURI","push","Test","NotFound","App","exact","path","component","AnimationTest","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6aAkCeA,MA7Bf,WAAwB,IAAD,EACaC,mBAAS,IADtB,mBACZC,EADY,KACFC,EADE,OAEWF,oBAAS,GAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGOJ,mBAAS,MAHhB,mBAGZK,EAHY,KAGLC,EAHK,KAMbC,EAAU,uCAAG,4BAAAC,EAAA,sEAGXF,EAAS,MAETF,GAAW,GALA,SAMYK,IAAMC,IAdxB,4FAQM,OAMLC,EANK,OAQXT,EAAYS,EAASC,KAAKC,OARf,gDAUXP,EAAS,EAAD,IAVG,yBAYXF,GAAW,GAZA,4EAAH,qDAoBhB,OAJAU,qBAAU,WACNP,IAAaQ,SACd,IAEI,CAACd,WAAUE,UAASE,QAAOE,e,qBCjBvBS,MAXf,YAA8E,IAAxDC,EAAuD,EAAvDA,UAAqCC,GAAkB,EAA5CC,YAA4C,EAA/BC,YAA+B,EAAlBF,SAASG,EAAS,EAATA,MAGhE,OACI,sBAAKC,UAAU,cAAcC,MAAO,CAACC,WAAYH,GAAjD,UACI,sBAAMC,UAAU,UAAhB,SAA2BJ,IAC3B,sBAAMI,UAAU,YAAhB,SAA6BL,Q,MCe1BQ,MArBf,YAAgD,IAAzBC,EAAwB,EAAxBA,QAASN,EAAe,EAAfA,YAEtBO,EAAmBP,EAAcM,EAAQE,OAG3CC,EAAaH,EACZI,OAAOC,MAAMJ,GAAkBK,KAAK,0CACpCF,OAAOC,MANQ,EAMYX,GAAaY,KAAK,KAElD,OACI,qBAAKV,UAAU,cAAf,SACKO,EAAWI,KAAI,SAACC,EAAaC,GAAd,OACZ,qBAAiBb,UAAU,SAA3B,SACI,+BAAOY,KADDC,S,MCWXC,MAvBf,YAA2C,IAAzBf,EAAwB,EAAxBA,MAAOgB,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KAG/B,OACI,sBAAKhB,UAAU,UAAf,UACI,wBAAQA,UAAU,QAAlB,0BACA,sBAAKA,UAAU,eAAf,UACI,wBACIA,UAAU,OACViB,QAAS,kBAAMC,OAAOC,SAASC,KAAKL,GAFxC,uCAKA,wBACIf,UAAU,OACVC,MAAO,CAACC,WAAYH,GACpBkB,QAAS,kBAAMC,OAAOC,SAASC,KAAKJ,GAHxC,6CC2CDK,EAjDC,CACZC,OAAQ,SAACC,EAAMC,EAAMC,EAAKC,GAEtB,IAgBIC,EAAGC,EAhBDC,EAAS,SAAUC,GACrB,OAAOC,mBAAmBD,GACrBE,QAAQ,YACL,SAAUC,GACN,MAAO,IAAMA,EAAEC,WAAW,GAAGC,SAAS,QAIhDL,EAAG,yBAAqBD,EAAOH,GAA5B,gBAAyCG,EAAOJ,GAAhD,gCAA4EI,EAAON,GAAnF,qBAAqGM,EAAOL,IACjHY,EAAM,YACJC,EAAM,mEACRC,EAAMR,EAAIxB,OACRiC,EAAMD,EAAM,EAKlB,IAJIC,EAAM,IACND,GAAOC,GAGNZ,EAAI,EAAGA,EAAIW,EAAKX,GAAK,EACtBC,EAAKE,EAAII,WAAWP,IAAM,GACrBG,EAAII,WAAWP,EAAI,IAAM,EAC1BG,EAAII,WAAWP,EAAI,GACvBS,GAAOC,EAAIG,OAAQZ,GAAK,GAAM,IAC9BQ,GAAOC,EAAIG,OAAQZ,GAAK,GAAM,IAC9BQ,GAAOC,EAAIG,OAAQZ,GAAK,EAAK,IAC7BQ,GAAOC,EAAIG,OAAa,GAALZ,GAiBvB,OAfY,IAARW,GACAX,EAAKE,EAAII,WAAWP,IAAM,GACrBG,EAAII,WAAWP,EAAI,IAAM,EAC9BS,GAAOC,EAAIG,OAAQZ,GAAK,GAAM,IAC9BQ,GAAOC,EAAIG,OAAQZ,GAAK,GAAM,IAC9BQ,GAAOC,EAAIG,OAAQZ,GAAK,EAAK,IAC7BQ,GAAO,KACQ,IAARG,IACPX,EAAIE,EAAII,WAAWP,IAAM,GACzBS,GAAOC,EAAIG,OAAQZ,GAAK,GAAM,IAC9BQ,GAAOC,EAAIG,OAAQZ,GAAK,GAAM,IAC9BQ,GAAO,IACPA,GAAO,KAGJA,IC6CAK,MAvFf,SAAclB,GAIV,IAAMP,EAAOK,EAAQC,OAAOC,EAAK5B,UAAW,GAAI,EAAG,GAC7CoB,EAAWM,EAAQC,OAAOC,EAAK5B,UAAW,GAAI,EAAG,GAqBjDI,EAAQwB,EAAK1B,YACS,IAArB0B,EAAKzB,YAAqB,UAAY,UACjB,IAArByB,EAAKzB,YAAqB,UAAY,UAG7C,OACI,sBAAKE,UAAU,YAAf,UACI,cAAC,EAAD,2BAAgBuB,GAAhB,IAAsB3B,QAzBT,SAAC,GAA4C,IAA1CD,EAAyC,EAAzCA,UAAW+C,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpCC,EAAS,4CACTC,EAAW,4CAGbjD,EAAU,IAUd,MAXsB,CAAC+C,EAAcD,EAAW/C,GAGlCmD,SAAQ,SAAAC,GACdH,EAAOI,KAAKD,GACZnD,EAAU,2BACHiD,EAASG,KAAKD,KACrBnD,EAAU,+BAIXA,EAU4BqD,CAAa1B,GAAOxB,MAAOA,KAC1D,qBAAKC,UAAU,YAAf,SACI,+BACKuB,EAAKmB,UACAnB,EAAKmB,UACL,yDAId,cAAC,EAAD,eAAiBnB,IAOjB,cAAC,EAAD,CAASxB,MAAOA,EAAOgB,SAAUA,EAAUC,KAAMA,QC7C9CkC,EAbE,WAAO,IAAD,EACKxE,oBAAS,GADd,mBACZyE,EADY,KACNC,EADM,KAUnB,MAAO,CAACD,EAPU,WACdC,GAAQ,IAEO,WACfA,GAAQ,MCeDC,G,MArBD,SAAC,GAA4C,IAA1CF,EAAyC,EAAzCA,KAAMG,EAAmC,EAAnCA,WAAoBC,GAAe,EAAvBC,OAAuB,EAAfD,UAGvC,OAEI,aADA,CACA,OAAKvD,UAAYmD,EAAO,kBAAoB,QAA5C,SACMA,EACE,oCAEI,+BACKI,IAEL,iCACI,wBAAQvD,UAAU,QAAQiB,QAASqC,EAAnC,0BAGR,SCgCDG,MAxCf,WAAiB,IAAD,EACqChF,IAAzCE,EADI,EACJA,SAAUE,EADN,EACMA,QAAgBI,GADtB,EACeF,MADf,EACsBE,YADtB,EAG0BiE,IAH1B,mBAGLC,EAHK,KAGCO,EAHD,KAGYJ,EAHZ,KAcZ,OACI,gCACI,qBAAKtD,UAAU,SAAf,gIAGA,wBAAQiB,QAAShC,EAAjB,oBACCJ,EAAU,cAAgB,GAC3B,uBACA,qBAAKoB,MAAO,CAAC0D,OAAQ,QAArB,6HAGA,qBAAK3D,UAAU,iBAAf,SACKrB,EAASgC,KAAI,SAACY,EAAMV,GAAP,OAAiB,cAAC,EAAD,eAAsBU,GAAXV,QAI9C,cAAC,EAAD,CAAOsC,KAAMA,EAAMG,WAAYA,EAAYE,OAAO,WAAlD,6BAGA,wBAAQvC,QAASyC,EAAjB,sB,EC5C6BE,EAAQ,IAAzCC,E,EAAAA,cAAeC,E,EAAAA,cAORC,EALE,CACbzC,OAAQ,SAAA0C,GAAQ,OAAIH,EAAcI,KAAKC,UAAUF,GAAUG,MAAM,GAAI,KACrEC,MAAO,SAAAC,GAAY,OAAIJ,KAAKG,MAAL,WAAeN,EAAcO,GAA7B,QC4BZC,MA3Bf,YAA6C,IAApBC,EAAmB,EAA7BpD,SAAUoD,OAASC,EAAU,EAAVA,QAAU,EAQlBT,EAASU,OAAOF,EAAOJ,MAAM,IARX,mBAQjC5C,EARiC,YAUlCF,EAAUqD,EAAYnD,OAVY,MAQxB,GARwB,EAUF,EAAG,GAQzC,OANKA,EAGDL,OAAOC,SAASC,KAAOC,EAFvBmD,EAAQG,KAAK,cAMb,gCACI,iDACA,uBACA,mBAAGvD,KAAMC,EAAT,2CCrBGuD,MAJf,WACI,OAAO,8DCGIC,MAJf,WACI,OAAO,iD,iBCuBIC,MAhBf,WACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,cAAC,IAAD,CAAOuB,KAAK,QAAQC,UAAWX,IAC/B,cAAC,IAAD,CAAOU,KAAK,QAAQC,UAAWL,IAC/B,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,UAAWJ,IACzC,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,aAAaC,UAAWC,MAC1C,cAAC,IAAD,CAAOD,UAAW,kBAAM,cAAC,IAAD,CAAUE,GAAG,uBCdrDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.fe897bc0.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ROOM_API = \"https://webapi.syncroom.appservice.yamaha.com/ndroom/room_list.json?pagesize=500&realm=4\";\r\n\r\nfunction useRoomData() {\r\n    const [roomData, setRoomData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    // const [autoReload, setAutoReload] = useState(true);\r\n\r\n    const fetchRooms = async () => {\r\n        /** @param response.data.rooms */\r\n        try {\r\n            setError(null);\r\n            // setRoomData([]);\r\n            setLoading(true);\r\n            const response = await axios.get(ROOM_API);\r\n\r\n            setRoomData(response.data.rooms);\r\n        } catch (error) {\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRooms().then();\r\n    }, []);\r\n\r\n    return {roomData, loading, error, fetchRooms};\r\n}\r\n\r\nexport default useRoomData;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction RoomHeader({ room_name, need_passwd, num_members, country, color }) {\r\n\r\n\r\n    return (\r\n        <div className=\"room-header\" style={{background: color}}>\r\n            <span className=\"country\">{country}</span>\r\n            <span className=\"room-name\">{room_name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomHeader;\r\n","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction RoomMembers({ members, num_members }) {\r\n    const MAX_MEMBERS = 5;\r\n    const numPrivateMember = num_members - members.length;\r\n\r\n\r\n    let memberList = members\r\n        .concat(Array(numPrivateMember).fill('비공개 프로필'))\r\n        .concat(Array(MAX_MEMBERS - num_members).fill(''))\r\n\r\n    return (\r\n        <div className='member-list'>\r\n            {memberList.map((member_name, index) => (\r\n                <div key={index} className='member'>\r\n                    <span>{member_name}</span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RoomMembers;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction Buttons({color, tempJoin, join}) {\r\n\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button className='share'>공유</button>\r\n            <div className='join-buttons'>\r\n                <button\r\n                    className='temp'\r\n                    onClick={() => window.location.href=tempJoin}\r\n                >임시 입장\r\n                </button>\r\n                <button\r\n                    className='join'\r\n                    style={{background: color}}\r\n                    onClick={() => window.location.href=join}\r\n                >참여하기\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons;","/* ----------------------------------------------------------------------\r\n * util.js\r\n *\r\n * Copyright(C) 2014 Yamaha Corporation\r\n * All rights reserved.\r\n *\r\n * Modified by SnowSuno - syncroomkr.github.io\r\n * ---------------------------------------------------------------------- */\r\n\r\nconst joinURI = {\r\n    create: (room, pass, pid, mode) => {\r\n\r\n        const urienc = function (str) {\r\n            return encodeURIComponent(str)\r\n                .replace(/[!*'()]/g,\r\n                    function (c) {\r\n                        return \"%\" + c.charCodeAt(0).toString(16);\r\n                    });\r\n        };\r\n\r\n        const str = `joingroup?mode=${urienc(mode)}&pid=${urienc(pid)}&nickname=&groupname=${urienc(room)}&password=${urienc(pass)}`;\r\n        let uri = 'syncroom:';\r\n        const tbl = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n        let len = str.length;\r\n        const mod = len % 3;\r\n        if (mod > 0)\r\n            len -= mod;\r\n\r\n        let i, t;\r\n        for (i = 0; i < len; i += 3) {\r\n            t = (str.charCodeAt(i) << 16) |\r\n                (str.charCodeAt(i + 1) << 8) |\r\n                str.charCodeAt(i + 2);\r\n            uri += tbl.charAt((t >> 18) & 0x3F);\r\n            uri += tbl.charAt((t >> 12) & 0x3F);\r\n            uri += tbl.charAt((t >> 6) & 0x3F);\r\n            uri += tbl.charAt((t) & 0x3F);\r\n        }\r\n        if (mod === 2) {\r\n            t = (str.charCodeAt(i) << 16) |\r\n                (str.charCodeAt(i + 1) << 8);\r\n            uri += tbl.charAt((t >> 18) & 0x3F);\r\n            uri += tbl.charAt((t >> 12) & 0x3F);\r\n            uri += tbl.charAt((t >> 6) & 0x3F);\r\n            uri += '=';\r\n        } else if (mod === 1) {\r\n            t = str.charCodeAt(i) << 16;\r\n            uri += tbl.charAt((t >> 18) & 0x3F);\r\n            uri += tbl.charAt((t >> 12) & 0x3F);\r\n            uri += '=';\r\n            uri += '=';\r\n        }\r\n\r\n        return uri;\r\n    }\r\n}\r\n\r\n\r\nexport default joinURI;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nimport RoomHeader from \"./Header\";\r\nimport RoomMembers from \"./Members\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nimport joinURI from \"../../util/joinURI\";\r\n// import shareURI from \"../../util/shareURI\";\r\n\r\nfunction Room(room) {\r\n\r\n\r\n\r\n    const join = joinURI.create(room.room_name, \"\", 4, 2);\r\n    const tempJoin = joinURI.create(room.room_name, \"\", 4, 3)\r\n    // const share = shareURI.create([room.room_name]);\r\n\r\n    const checkCountry = ({ room_name, room_desc, creator_nick }) => {\r\n        const korean = /[ㄱ-ㅎㅏ-ㅣ가-힣]/;\r\n        const japanese = /[ぁ-んァ-ン一-龯]/;\r\n\r\n        const searchStrings = [creator_nick, room_desc, room_name];\r\n        let country = '-';\r\n\r\n        searchStrings.forEach(string => {\r\n            if (korean.test(string)) {\r\n                country = '🇰🇷';\r\n            } else if (japanese.test(string)) {\r\n                country = '🇯🇵'\r\n            }\r\n        });\r\n\r\n        return country\r\n    }\r\n\r\n    const color = room.need_passwd\r\n        ? (room.num_members === 5) ? '#4B4B4B' : '#000000'\r\n        : (room.num_members === 5) ? '#7680A2' : '#132F92';\r\n\r\n\r\n    return (\r\n        <div className=\"room-tile\">\r\n            <RoomHeader {...room} country={checkCountry(room)} color={color}/>\r\n            <div className=\"room-desc\">\r\n                <span>{\r\n                    (room.room_desc) \r\n                        ? room.room_desc\r\n                        : '방 설명이 없습니다'\r\n                }</span>\r\n            </div>\r\n\r\n            <RoomMembers {...room} />\r\n            {/*<ul>*/}\r\n            {/*    {room.members.map((member, index) => (*/}\r\n            {/*        <li key={index}>{member}</li>  // TODO : 비공개 유저는 members array에 포함되지 않기 때문에 num_members를 이용해 추가해줘야 함*/}\r\n            {/*    ))}*/}\r\n            {/*</ul>*/}\r\n\r\n            <Buttons color={color} tempJoin={tempJoin} join={join} />\r\n\r\n                {/*<a href={joinTestURI}>임시 입장</a>*/}\r\n                {/*{' '}*/}\r\n                {/*<a href={joinURI}>입장</a>*/}\r\n\r\n\r\n            {/*공유 링크:*/}\r\n            {/*{*/}\r\n            {/*    room.need_passwd*/}\r\n            {/*        ? '잠긴방 링크는 나중에'*/}\r\n            {/*        : <a href={link}>https://syncroomkr.github.io/join?{link}</a>*/}\r\n            {/*}*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nRoom.propTypes = {\r\n    create_time: PropTypes.string.isRequired,\r\n    creator_icon: PropTypes.shape({\r\n        icon: PropTypes.string,\r\n        iconurl: PropTypes.string\r\n    }),\r\n    creator_mid: PropTypes.string.isRequired,\r\n    creator_nick: PropTypes.string.isRequired,\r\n    iconlist: PropTypes.arrayOf(PropTypes.shape({\r\n        icon: PropTypes.string,\r\n        iconurl: PropTypes.string\r\n    })),\r\n    index: PropTypes.number.isRequired,\r\n    members: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    need_passwd: PropTypes.bool.isRequired,\r\n    num_members: PropTypes.number.isRequired,\r\n    room_desc: PropTypes.string,\r\n    room_name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Room;\r\n","import {useState} from \"react\";\r\n\r\nconst useModal = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setOpen(true);\r\n    }\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    return [open, openModal, closeModal]\r\n}\r\n\r\nexport default useModal;\r\n","import React from \"react\";\r\nimport \"./Modal.css\"\r\n\r\nconst Modal = ( {open, closeModal, header, children} ) => {\r\n    // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n\r\n    return (\r\n        // 모달이 열릴때 openModal 클래스가 생성된다.\r\n        <div className={ open ? 'openModal modal' : 'modal' }>\r\n            { open ? (\r\n                <section>\r\n\r\n                    <main>\r\n                        {children}\r\n                    </main>\r\n                    <footer>\r\n                        <button className=\"close\" onClick={closeModal}> close </button>\r\n                    </footer>\r\n                </section>\r\n            ) : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nimport useRoomData from \"../hooks/useRoomData\";\r\nimport Room from \"../components/Room/\";\r\n\r\nimport useModal from \"../components/modals/useModal\";\r\nimport Modal from \"../components/modals/Modal\";\r\n\r\n\r\n\r\nfunction Home() {\r\n    const { roomData, loading, error, fetchRooms } = useRoomData();\r\n\r\n    const [open, openModal, closeModal] = useModal();\r\n\r\n    if (!loading) {\r\n        if (!error) {\r\n            // console.log(rooms)\r\n        } else {\r\n            // console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                이 부분은 야무진 헤더가 될 예정입니다 ㅎㅎ\r\n            </div>\r\n            <button onClick={fetchRooms}>reload</button>\r\n            {loading ? ' Loading...' : ''}\r\n            <br/>\r\n            <div style={{height: '80px'}}>\r\n                검색기능이랑 필터기능 들어갈 자리입니다\r\n            </div>\r\n            <div className='room-container'>\r\n                {roomData.map((room, index) => <Room key={index} {...room}/>)}\r\n                {/*{Array(2).fill(<div style={{width: '388px'}}/>)}*/}\r\n            </div>\r\n\r\n            <Modal open={open} closeModal={closeModal} header=\"qwerqwer\">\r\n                this is a modal\r\n            </Modal>\r\n            <button onClick={openModal}>open</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;\r\n","const { base62_encode, base62_decode } = require('@samwen/base62-util');\r\n\r\nconst shareURI = {\r\n    create: roomInfo => base62_encode(JSON.stringify(roomInfo).slice(1, -1)),\r\n    parse: encodedQuery => JSON.parse(`[${base62_decode(encodedQuery)}]`)\r\n}\r\n\r\nexport default shareURI;\r\n","import React from \"react\";\r\n\r\nimport makeJoinURI from \"../util/joinURI\";\r\nimport shareURI from \"../util/shareURI\";\r\n\r\nfunction Join({location:{search}, history}) {\r\n    // /**\r\n    //  * @param params.room\r\n    //  * @param params.pw\r\n    //  */\r\n    // const {room, pw = \"\"} = Object.fromEntries(\r\n    //     decodeURI(search).slice(img).split('&').map(s => s.split('='))\r\n    // );\r\n    const [room, pw=\"\"] = shareURI.decode(search.slice(1));\r\n\r\n    const joinURI = makeJoinURI(room, pw, 4, 2);\r\n\r\n    if (!room) {\r\n        history.push('./notfound');\r\n    } else {\r\n        window.location.href = joinURI;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span>redirect page</span>\r\n            <br/>\r\n            <a href={joinURI}>수동 입장</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join;\r\n","import React from \"react\";\r\n\r\nfunction Test() {\r\n    return <h1>This is a Routing Test page</h1>\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n    return <h1>Page not found</h1>\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\nimport Home from \"./routes/Home\";\r\nimport Join from \"./routes/Join\";\r\nimport Test from \"./routes/Test\";\r\nimport NotFound from \"./routes/NotFound\";\r\n\r\nimport AnimationTest from \"./test/AnimationTest\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Route path='/join' component={Join}/>\r\n                <Route path=\"/test\" component={Test}/>\r\n                <Route exact path=\"/notfound\" component={NotFound} />\r\n                <Route exact path=\"/animation\" component={AnimationTest}/>\r\n                <Route component={() => <Redirect to=\"/notfound\"/>}/>\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}